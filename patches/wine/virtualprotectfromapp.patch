From d0e0d5a5656d030646843befbf60a1b18adaf185 Mon Sep 17 00:00:00 2001
From: Onni Kukkonen <onni.kukkonen77@gmail.com>
Date: Fri, 25 Apr 2025 17:18:26 +0300
Subject: [PATCH] implement VirtualProtectFromApp

---
 dlls/kernelbase/kernelbase.spec |  2 +-
 dlls/kernelbase/memory.c        | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/dlls/kernelbase/kernelbase.spec b/dlls/kernelbase/kernelbase.spec
index 0232a61613f9..212954700db0 100644
--- a/dlls/kernelbase/kernelbase.spec
+++ b/dlls/kernelbase/kernelbase.spec
@@ -1734,7 +1734,7 @@
 @ stdcall VirtualLock(ptr long)
 @ stdcall VirtualProtect(ptr long long ptr)
 @ stdcall VirtualProtectEx(long ptr long long ptr)
-# @ stub VirtualProtectFromApp
+@ stdcall VirtualProtectFromApp(ptr long long ptr)
 @ stdcall VirtualQuery(ptr ptr long)
 @ stdcall VirtualQueryEx(long ptr ptr long)
 @ stdcall VirtualUnlock(ptr long)
diff --git a/dlls/kernelbase/memory.c b/dlls/kernelbase/memory.c
index 107453034991..14c899b9d0af 100644
--- a/dlls/kernelbase/memory.c
+++ b/dlls/kernelbase/memory.c
@@ -564,6 +564,38 @@ BOOL WINAPI DECLSPEC_HOTPATCH VirtualProtectEx( HANDLE process, void *addr, SIZE
     return set_ntstatus( NtProtectVirtualMemory( process, &addr, &size, new_prot, old_prot ));
 }
 
+/***********************************************************************
+ *             VirtualProtectFromApp   (kernelbase.@)
+ */
+ BOOL WINAPI DECLSPEC_HOTPATCH VirtualProtectFromApp( void *addr, SIZE_T size,
+    ULONG new_prot, ULONG *old_prot )
+{
+    DWORD old_prot_dw;
+    BOOL success;
+
+    /* This must be non-null */
+    if (!old_prot)
+    {
+        ERR("VirtualProtectFromApp called with null old_prot, failing\n");
+        set_ntstatus(STATUS_INVALID_PARAMETER);
+        return FALSE;
+    }
+
+    /* These are not allowed */
+    if (new_prot & PAGE_EXECUTE_READWRITE || new_prot & PAGE_EXECUTE_WRITECOPY)
+    {
+        ERR("VirtualProtectFromApp called with invalid new_prot, failing\n");
+        set_ntstatus(STATUS_INVALID_PARAMETER);
+        return FALSE;
+    }
+        
+    
+    success = VirtualProtect(addr, size, new_prot, &old_prot_dw);
+    *old_prot = old_prot_dw;
+
+    return success;
+}
+
 
 /***********************************************************************
  *             VirtualQuery   (kernelbase.@)
